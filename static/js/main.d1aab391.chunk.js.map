{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","offset","handlePrevClick","props","images","step","frameSize","itemWidth","infinite","hiddenImagesSize","length","setState","Math","min","handleNextClick","max","this","animationDuration","className","style","width","map","image","index","transform","transition","src","alt","type","onClick","disabled","Component","App","changeProp","e","target","name","Number","value","onChange","checked","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1aab391.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  offset: number;\n};\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    offset: 0,\n  };\n\n  handlePrevClick = () => {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      infinite,\n    } = this.props;\n\n    const hiddenImagesSize = (images.length - frameSize) * itemWidth;\n\n    this.setState((state) => ({\n      offset: Math.min(state.offset + itemWidth * step, 0),\n    }));\n\n    if (this.state.offset === 0 && infinite) {\n      this.setState({ offset: -hiddenImagesSize });\n    }\n  };\n\n  handleNextClick = () => {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      infinite,\n    } = this.props;\n\n    const hiddenImagesSize = (images.length - frameSize) * itemWidth;\n\n    this.setState((state) => ({\n      offset: Math.max(state.offset - itemWidth * step, -hiddenImagesSize),\n    }));\n\n    if (this.state.offset === -hiddenImagesSize && infinite) {\n      this.setState({ offset: 0 });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { offset } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{ width: `${frameSize * itemWidth}px` }}\n        >\n          {images.map((image, index) => (\n            <li\n              className=\"Carousel__item\"\n              style={{\n                transform: `translateX(${offset}px)`,\n                transition: `${animationDuration}ms`,\n              }}\n            >\n              <img\n                src={image}\n                alt={`${index + 1}`}\n                style={{ width: `${itemWidth}px` }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            onClick={this.handlePrevClick}\n            disabled={offset === 0 && !infinite}\n          >\n            Prev\n          </button>\n\n          <button\n            data-cy=\"next\"\n            type=\"button\"\n            onClick={this.handleNextClick}\n            disabled={\n              offset === -(images.length - frameSize) * itemWidth && !infinite\n            }\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  changeProp = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState((state) => ({\n      ...state,\n      [e.target.name]: Number(e.target.value),\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form className=\"App__form\">\n          <label>\n            Item width:\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              name=\"itemWidth\"\n              value={itemWidth}\n              min=\"50\"\n              max=\"400\"\n              onChange={this.changeProp}\n            />\n          </label>\n\n          <label>\n            Frame Size:\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              name=\"frameSize\"\n              value={frameSize}\n              min=\"1\"\n              max={images.length - 1}\n              onChange={this.changeProp}\n            />\n          </label>\n\n          <label>\n            Step:\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              name=\"step\"\n              value={step}\n              min=\"1\"\n              max={frameSize}\n              onChange={this.changeProp}\n            />\n          </label>\n\n          <label>\n            Animation duration:\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              name=\"animationDuration\"\n              value={animationDuration}\n              min=\"100\"\n              max=\"5000\"\n              step=\"100\"\n              onChange={this.changeProp}\n            />\n          </label>\n\n          <label>\n            Infinite:\n            <input\n              className=\"App__input\"\n              type=\"checkbox\"\n              checked={infinite}\n              onChange={() => (\n                this.setState((state) => ({\n                  infinite: !state.infinite,\n                }))\n              )}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}